// Generated by Dagger (https://dagger.dev).
package com.abdrakhmanovartem.core_impl.dagger;

import android.content.Context;
import com.abdrakhmanovartem.core_api.App;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppContextModule_ProvideAppContextFactory implements Factory<Context> {
  private final Provider<App> appProvider;

  public AppContextModule_ProvideAppContextFactory(Provider<App> appProvider) {
    this.appProvider = appProvider;
  }

  @Override
  public Context get() {
    return provideAppContext(appProvider.get());
  }

  public static AppContextModule_ProvideAppContextFactory create(Provider<App> appProvider) {
    return new AppContextModule_ProvideAppContextFactory(appProvider);
  }

  public static Context provideAppContext(App app) {
    return Preconditions.checkNotNullFromProvides(AppContextModule.INSTANCE.provideAppContext(app));
  }
}
